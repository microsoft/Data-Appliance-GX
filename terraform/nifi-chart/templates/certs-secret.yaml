{{ if .Values.nifi.tls.certificateSource.userProvided }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "nifi.fullname" . }}-certs
  labels:
    app: {{ include "nifi.name" . | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
type: Opaque
data:
  {{ $ca_certificate_path := printf "%s/%s" .Values.nifi.tls.dir .Values.nifi.tls.caCertificate }}
{{- if (.Files.Get $ca_certificate_path) }}
  caCertificate: {{ (.Files.Get $ca_certificate_path) | b64enc | quote }}
{{- end }}
  {{ $admin_certificate := printf "%s/%s" .Values.nifi.tls.dir .Values.nifi.tls.adminUser.certificate }}
{{- if (.Files.Get $admin_certificate) }}
  admin_certificate: {{ (.Files.Get $admin_certificate) | b64enc | quote }}
{{- end }}
  {{ $admin_private_key := printf "%s/%s" .Values.nifi.tls.dir .Values.nifi.tls.adminUser.privateKey }}
{{- if (.Files.Get $admin_private_key) }}
  admin_private_key: {{ (.Files.Get $admin_private_key) | b64enc | quote }}
{{- end }}
  nodeCerts: |-
{{- $files := .Files -}}
{{- $certificate_dir := .Values.nifi.tls.dir -}}
{{- range .Values.nifi.tls.nodeCerts -}}
  {{- $node_private_key := printf "%s/%s" $certificate_dir .privateKey -}}
  {{- $node_certificate := printf "%s/%s" $certificate_dir .certificate }}
  node_{{ .node }}_private_key: {{ ($files.Get $node_private_key) | b64enc | quote }}
  node_{{ .node }}_certificate: {{ ($files.Get $node_certificate) | b64enc | quote }}
{{- end }}
  userCerts: |-
{{- $files := .Files -}}
{{- $certificate_dir := .Values.nifi.tls.dir -}}
{{- range .Values.nifi.tls.userCerts -}}
  {{- $user_certificate := printf "%s/%s" $certificate_dir .certificate }}
  user_{{ .user }}_certificate: {{ ($files.Get $user_certificate) | b64enc | quote }}
{{- end }}
{{ end }}
