
{{- if .Values.ingress.enabled }}
{{- if or .Values.nifi.properties.secured .Values.ingress.tlsOnAnonymousNifi }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "nifi.fullname" . }}-ingress-ca-cert
  labels:
    app: {{ include "nifi.name" . | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
type: Opaque
data:
{{- if .Values.ingress.tlsCerts.rootCaCertificate }}
    {{- $ca_certificate := printf "%s/%s" .Values.ingress.tlsCerts.dir .Values.ingress.tlsCerts.rootCaCertificate }}
    ca.crt: {{ (.Files.Get $ca_certificate) | b64enc | quote }}
{{- end }}
{{- end }}

{{- if or .Values.nifi.properties.secured .Values.ingress.tlsOnAnonymousNifi }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "nifi.fullname" . }}-ingress-tls
  labels:
    app: {{ include "nifi.name" . | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
type: kubernetes.io/tls
data:
{{- if and .Values.ingress.tlsCerts.certificate .Values.ingress.tlsCerts.privateKey  }}
    {{- $tls_certificate := printf "%s/%s" .Values.ingress.tlsCerts.dir .Values.ingress.tlsCerts.certificate }}
    {{- $tls_private_key := printf "%s/%s" .Values.ingress.tlsCerts.dir .Values.ingress.tlsCerts.privateKey }}
    tls.crt: {{ .Files.Get $tls_certificate | b64enc | quote }}
    tls.key: {{ .Files.Get $tls_private_key | b64enc | quote }}
{{- end }}
{{- end }}

{{- if and .Values.nifi.properties.secured .Values.nifi.tls.certificateSource.userProvided }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "nifi.fullname" . }}-proxy-authentication-tls-secret
  labels:
    app: {{ include "nifi.name" . | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
type: Opaque
data:
{{- if .Values.ingress.proxyCerts.certificate }}
  {{- $tls_certificate := printf "%s/%s" .Values.ingress.proxyCerts.dir .Values.ingress.proxyCerts.certificate }}
  tls.crt: {{ .Files.Get $tls_certificate | b64enc | quote }}
{{- end }}
{{- if .Values.ingress.proxyCerts.certificate }}
  {{- $tls_private_key := printf "%s/%s" .Values.ingress.proxyCerts.dir .Values.ingress.proxyCerts.privateKey }}
  tls.key: {{ .Files.Get $tls_private_key | b64enc | quote }}
{{- end }}
{{- if .Values.nifi.tls.caCertificate }}
  {{- $ca_certificate := printf "%s/%s" .Values.nifi.tls.dir .Values.nifi.tls.caCertificate }}
  ca.crt: {{ .Files.Get $ca_certificate | b64enc | quote }}
{{- end }}
{{- end }}
{{- end }}
